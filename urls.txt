Subida a un servicio host: se hizo un deploy del sitio en github. El vínculo para ver el sitio es:
            https://enfermeria.github.io/cocinab8/index.html 
        
La api web del mockapi está en:
            https://666f2da5f1e1da2be5223295.mockapi.io/api/v1/alumnos


    ---------------------------------------------------------------------------------------------------------------------------
                                                NOTA A LA CÁTEDRA                                                               
    ---------------------------------------------------------------------------------------------------------------------------
    Trabajo práctico especial, grupo B8: John David Molina Velarde (comisión B3) y Mercedes Médico (Comisión A3).

    El trabajo práctico consiste en varias páginas, todas con un header con el correspondiente menú responsive y un footer con
    los vínculos a las social media de Cocina B8 (no las hemos generado las cuentas en las social media,  así que simplemente 
    se vinculan a la página raiz de Facebook, Twitter (ahora X), Whatsapp, e Instagram). Además el footer tiene un checkbox
    para seleccionar una paleta alternativa de colores "Modo oscuro", cuya selección persiste al cambiar entre las páginas
    (manteniendo la paleta de colores seleccionadas) y entre sesiones (recordando la selección de colores la próxima vez que
    se ingrese a la página).
    Cada una de las páginas es responsive, ya sea con Flex, con Grid o con combinación de ambos:
        index.html       : Página principal con noticias en tajetas y vínculos externos a las noticias originales.
        acerca.html      : Página que habla de los autores y muestra una tabla responsive con lista de alumnos del último curso.
        inscripcion.html : Página de "contacto" que la vemos como una página para inscribirse al curso. Acá implementamos un
                           captcha con un botón de recargar captcha (el cual es generado aleatoriamente con combinaciones de
                           letras y números desde Javascript).
        recetas.html     : Las tarjetas 3D (con un hermoso efecto de sensación 3D de la tarjeta que se da vuelta al pasar el 
                           mouse por arriba). Cada una de las tarjetas tiene vínculo con una receta particular de cada plato:
                                R-albondiga-veggie.html
                                R-anticuchos.html
                                R-arrolladitos-palta.html
                                R-budin-arroz-y-verduras.html
                                R-canelones.html
                                R-guiso-pampeano.html
                                R-tortilla-espanola.html
                                R-empanadas-saltenas.html
                                R-tarta-zapallo.html

    Las paletas de colores tienen los colores definidos como variables que son reutilizados en todo el CSS, de forma que resulte
    simple definir los colores en un solo lugar centralizado, fácil de cambiar.

    El header y footer son el mismo para todas los html, cambiando solo el contenido del main.
    El logo del título del header tiene una pequeña animación para hacerlo más ameno.

    Cumple los puntos de la consigna:
    1.- Es responsive y mobile first. 
        a) Soporta mobile (corte 480px), tablet (corte 768px), notebook (corte 1024px), pantalla grande
        b) Menú responsive. En modo celular menú oculto, se despliega con el hamburguer.
        c) Tabla con los alumnos del último curso totalmente responsive en la pagina "acerca.html" (bajo el menú aparece como "Nosotros")
        d) En varias páginas usa Flex, Grid y ambos.
    2.- Usa HTML Semántica: usa Header, footer, Main, article, aside, etc.
    3.- En la página "inscripción.html" (bajo el menú aparece como "Inscripción") tenemos un formulario de contacto/inscripción totalemente
        responsive con un captcha generado aleatoriamente desde javascript.
    4.- Incluimos varios screenshots de la pantalla principal y de ejemplos de algunas de las otras páginas.

    Respecto a los requerimientos:
    1.- tiene más de 3 archivos html. En particular tiene 13 archivos html, contando el index.html (bajo el menú aparece como "Inicio")
    2.- Tiene una barra de navegación que siempre está presente en todas las paginas.
    3.- Tiene varias listas diferentes de la navegación. Por ejemplo, en acerca.html (bajo el menú aparece como "Nosotros") hay una lista
        de los autores de la pagina. Y en cada una de las 9 páginas de recetas que incluímos, hay listas de ingredientes y listas de 
        procedimientos a seguir.
    4.- Se incluye una tabla totalmente responsive con los alumnos del último curso en la pagina "acerca.html" (bajo el menú aparece 
        como "Nosotros").
    5.- En la página "inscripción.html" (bajo el menú aparece como "Inscripción") tenemos un formulario de contacto/inscripción totalemente
        responsive con un captcha generado aleatoriamente desde javascript.
    6.- Tenemos múltiples imágenes, varias en cada noticia de la página Inicio (index.htm), así como en una de las 13 páginas que se muestran
        hay varias imágenes alusivas al tema.
    7.- El captcha de la página inscripción.html se genera aleatoriamente desde JavaScript, y también es validada desde JavaScript.

    Respecto a los Opcionales:
    1.- Los datos del captcha son generados aleatoriamente.
    2.- En el footer de cada página se tiene un check box para seleccionar una paleta de colores alternativa llamada "Modo oscuro". La 
        elección de dicha paleta de colores se recuerda entre las páginas (es decir, se mantiene si se cambia de página) y también se
        recuerda entre las sesiones (por más que se salga de la página, la próxima vez que ingrese en ella se recuerda la última elección
        de paleta de colores realizada por el usuario). Es decir, hay persistencia en la paleta elegida por el usuario.

    ---------------------------------------------------------------------------------------------------------------------------
                                                PARTE DOS DEL TRABAJO PRACTICO                                                               
    ---------------------------------------------------------------------------------------------------------------------------
    Tabla dinámica por API REST usando mockapi (https://666f2da5f1e1da2be5223295.mockapi.io/api/v1/alumnos):
    Se mueve la tabla dinámica a "alumnos.html". Dicha tabla está vinculada con el servicio API Rest mockapi, de donde se obtiene
    la infomación y donde se almacena la misma. Cada fila está asociado con un alumno JSON del servicio web mencionado. 
    Cada fila tiene un botón "Editar" y un boton "Borrar" que permite editar o eliminar los datos de ESA FILA. Cuando se edita la
    información de una fila, se edita directamente sobre esa fila (no en un formulario aparte) porque de esa forma la interfaz es
    más amigable. Observe que cuando se está editando los datos de un alumno, se deshabilitan todos los botones no pertinentes para
    indicar al usuario cuáles botones puede usar y para que los otros botones no interfieran.

    Observe que la tabla tiene un comportamiento totalmente responsive.
    
    A su vez hay un botón "Nuevo alumno" en la parte baja permite ingresar los datos del nuevo alumno EN LA MISMA TABLA (en una
    fila adicional al final). Cada vez que se Edita una fila o cuando se da de Alta un alumno, a la derecha aparecen dos botones
    "Aceptar"/"Cancelar" que realizan la modificación (guardando la info en mockapi) o revierten los cambios dejándolos como antes.
    
    En la parte baja se incluyen dos botones "Siguiente página" y "Página Previa" que permiten ir avanzando de a páginas entre 
    los grupos de alumnos que se encuentran en mockapi. Observe que cuando no hay una página previa, el botón "Página previa" está
    deshabilitado, así como "Página siguiente" cuando no hay una siguiente página.

    

    Se modificó la página para que funcione como SPA, con partial render, quedando una pantalla principal y cargando asincrónicamente
    todas las demás páginas en el "main" del index.html.

    Requerimientos:
    - carga la tabla automáticamente al cargar la página de alumnos, usando el servicio Rest de mockapi
    - Permite editar/borrar cada fila.
    - Permite ingresar nuevos alumnos

    Opcionales:
    1.- Subida a un servicio host: se hizo un deploy del sitio en github. El vínculo para ver el sitio es:
            https://enfermeria.github.io/cocinab8/index.html 
        La api web del mockapi está en:
            https://666f2da5f1e1da2be5223295.mockapi.io/api/v1/alumnos
    2.- SPA / Partial Render: se usa AJAX para la navegación de la página (técnica de partial render). 
        La página no se refresca completamente, cuando hago click en un link de la navigation bar se refresca sólo la porción main,
        cargando la parte de información que cambia. 
        Nota: se excluye del partial render los vínculos a páginas de noticias exteriores (infobae, clarín, etc.) por decisión de diseño
              se cargarán en una pestaña nueva.
    3.- Paginación: se traer la información del servicio rest de forma paginada. Para ello se usan los botones "siguiente página y 
        "página previa" para navegar entre las páginas de grupos de alumnos.
    4.- Creación de Items: Hay un botón "Nuevo alumno aleatorio" que genera aleatoriamente los datos de un alumno (cuantas veces se quiera)
        y lo agrega al servicio. El nombre se elige aleatoriamente de entre 100 nombres y se combina con casi 70 apellidos aleatorios 
        posibles (lo que da más de 7000 nombres completos posibles). Luego en base al nombre y apellido se genera aleatoriamente un mail 
        tomando el nombre, o el apellido, o la primer letra del nombre y el apellido, o el nombre y la primer letra del apellido. A ello se
        le pueden agregar en algunos casos un número de 2 dígitos y finalmente se asocia a uno de 5 servicios comunes de mail.
    5.- Filtrado: Se agregaron filtros de búsqueda en la tabla, mostrando solo los datos que cumplan el criterio, los demás datos 
        no se ven. Existe un combo box para seleccionar si se desea filtrar los datos de la tabla, ya sea por "No filtrar", 
        "Filtrar por nombre", "Filtrar por email" o "Filtrar por dni". Cuando se está eligiendo filtrar, se habilita un input para 
        ingresar el nombre, mail o dni a buscar. Observe que si está elegida la opción "No filtrar" ese input y el botón de filtrado 
        están deshabilitados